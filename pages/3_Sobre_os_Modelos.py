import streamlit as st


st.set_page_config(page_title="Sobre os Modelos Preditivos", page_icon="üß†", layout="wide")

st.markdown("# üß† Entendendo os Modelos Preditivos Utilizados")
st.markdown("---")

st.markdown("""
Para prever o pre√ßo do petr√≥leo Brent, uma s√©rie temporal notoriamente vol√°til e influenciada por diversos fatores, utilizamos uma combina√ß√£o de modelos estat√≠sticos cl√°ssicos e t√©cnicas de aprendizado profundo. A escolha desses modelos visa capturar diferentes aspectos da din√¢mica dos pre√ßos, desde padr√µes lineares e sazonais at√© rela√ß√µes mais complexas e depend√™ncias de longo prazo.

Nesta aplica√ß√£o, os modelos foram treinados utilizando os **√∫ltimos 10 anos de dados hist√≥ricos**, buscando um equil√≠brio entre relev√¢ncia dos padr√µes recentes e volume de dados suficiente para aprendizado.
""")

st.subheader("1. Modelos ARIMA, SARIMA e ARIMAX/SARIMAX")
st.markdown("""
Os modelos da fam√≠lia ARIMA s√£o amplamente utilizados para an√°lise e previs√£o de s√©ries temporais.

* **ARIMA (AutoRegressive Integrated Moving Average):**
    * **AR (Autoregressivo):** Assume que o valor atual da s√©rie depende de seus valores passados.
    * **I (Integrado):** Envolve diferenciar a s√©rie temporal para torn√°-la estacion√°ria (ou seja, remover tend√™ncias e varia√ß√µes na vari√¢ncia que mudam ao longo do tempo).
    * **MA (M√©dia M√≥vel):** Modela o erro da previs√£o como uma combina√ß√£o linear dos erros de previs√£o passados.
    * **Pontos Fortes:** S√£o bons para capturar estruturas de autocorrela√ß√£o lineares nos dados. S√£o relativamente interpret√°veis.

* **SARIMA (Seasonal ARIMA):**
    * √â uma extens√£o do ARIMA que inclui componentes sazonais. Adiciona os par√¢metros `(P, D, Q, S)` para modelar padr√µes que se repetem em um per√≠odo fixo `S` (ex: S=7 para semanal, S=12 para mensal em dados mensais).
    * No nosso projeto, ao usar o `AutoARIMA` da biblioteca `statsforecast`, especificamos um `season_length` (como `ARIMAX_SEASON_LENGTH = 7` ou `14` no seu notebook). Isso permite que o `AutoARIMA` tente ajustar um modelo SARIMA, encontrando automaticamente as melhores ordens `P, D, Q` para essa sazonalidade, al√©m das ordens n√£o sazonais `p, d, q`.

* **ARIMAX / SARIMAX (com Vari√°veis eX√≥genas):**
    * O "X" no final significa que o modelo pode incorporar **vari√°veis ex√≥genas**, ou seja, outras s√©ries temporais ou features que podem influenciar a s√©rie que estamos tentando prever (o pre√ßo do petr√≥leo).
    * **Por que usamos (ARIMAX):** No nosso caso, ao treinar o `AutoARIMA` no notebook, n√≥s fornecemos features sazonais expl√≠citas (como `dia_da_semana`, representa√ß√µes c√≠clicas de `m√™s` e `dia_do_ano`) como colunas adicionais no DataFrame de treinamento. O `AutoARIMA` da `statsforecast` (vers√£o >= 1.0.0) detecta automaticamente essas colunas extras e as utiliza como vari√°veis ex√≥genas. Assim, o modelo treinado e salvo como `sarima_model_sf.pkl` √©, na verdade, um **ARIMAX** (ou **SARIMAX** se o `AutoARIMA` tamb√©m encontrou componentes sazonais internos `P,D,Q` significativos).
    * **Benef√≠cio:** Incluir essas features sazonais como ex√≥genas pode ajudar o modelo a capturar padr√µes sazonais de forma mais direta e potencialmente melhorar a precis√£o das previs√µes, complementando a capacidade do componente SARIMA interno.

* **Transforma√ß√µes:** Para os modelos ARIMA/ARIMAX, frequentemente aplicamos transforma√ß√µes como a **logar√≠tmica** (para estabilizar a vari√¢ncia) e **diferencia√ß√£o** (para tornar a s√©rie estacion√°ria). No nosso caso, a pipeline de pr√©-processamento para o ARIMAX no notebook (`SomthDataIntervalValues`) realiza uma transforma√ß√£o logar√≠tmica e uma diferencia√ß√£o baseada em m√©dia m√≥vel. As previs√µes precisam ser revertidas para a escala original, o que √© feito na aplica√ß√£o Streamlit.
""")

st.subheader("2. Modelo LSTM H√≠brido (Long Short-Term Memory)")
st.markdown("""
LSTM √© um tipo avan√ßado de Rede Neural Recorrente (RNN) particularmente eficaz para aprender depend√™ncias de longo prazo em dados sequenciais, como s√©ries temporais.

* **Pontos Fortes do LSTM:**
    * **Mem√≥ria de Longo Prazo:** LSTMs possuem "port√µes" (gates) em sua arquitetura que lhes permitem lembrar informa√ß√µes por longos per√≠odos e esquecer informa√ß√µes irrelevantes, superando o problema do "desvanecimento do gradiente" de RNNs mais simples.
    * **Rela√ß√µes N√£o Lineares:** S√£o capazes de modelar rela√ß√µes complexas e n√£o lineares nos dados, que modelos lineares como ARIMA podem n√£o capturar.
    * **Flexibilidade com M√∫ltiplas Features (Multivariado):** LSTMs podem facilmente incorporar m√∫ltiplas s√©ries de entrada (features) para fazer previs√µes.

* **Por que usamos (LSTM H√≠brido com Features Sazonais):**
    1.  **Capturar Din√¢micas Complexas:** O pre√ßo do petr√≥leo √© influenciado por muitos fatores interconectados de forma n√£o linear. Um LSTM tem potencial para aprender esses padr√µes.
    2.  **Abordagem H√≠brida:** No nosso notebook, o LSTM foi treinado de forma "h√≠brida". A s√©rie de entrada para o LSTM (`df_combinado_para_lstm_final['y']` no notebook) foi constru√≠da usando o hist√≥rico de pre√ßos reais complementado/substitu√≠do pelas previs√µes do modelo ARIMAX (as "features ARIMAX"). A ideia √© que o ARIMAX capture bem os componentes lineares e sazonais mais estruturados, e o LSTM aprenda a modelar os res√≠duos ou as din√¢micas n√£o lineares restantes, ou a refinar as previs√µes do ARIMAX.
    3.  **Features Sazonais Expl√≠citas:** Assim como no ARIMAX, fornecemos ao LSTM as mesmas 5 features sazonais (`dia_da_semana`, `mes_sin`, `mes_cos`, `dia_do_ano_sin`, `dia_do_ano_cos`). Isso ajuda o LSTM a "entender" explicitamente os ciclos temporais. O `scaler.pkl` foi treinado nessas 6 features (a s√©rie 'y' combinada + 5 sazonais).
    4.  **Melhorias no Treinamento:** Para o LSTM, utilizamos um `seq_length` maior (ex: 60 dias) para dar mais contexto, uma arquitetura com mais unidades e camadas de `Dropout` (para reduzir overfitting), e `EarlyStopping` durante o treinamento para encontrar os melhores pesos e evitar treinar demais.

* **Pr√©-processamento:** Os dados de entrada para o LSTM s√£o normalizados (geralmente para a escala 0-1 usando `MinMaxScaler`) porque redes neurais geralmente performam melhor com dados de entrada escalonados. As previs√µes do LSTM s√£o ent√£o desnormalizadas para a escala original.

* **Desafios:** LSTMs geralmente requerem mais dados para treinar do que modelos ARIMA, podem ser mais lentos para treinar e exigem mais experimenta√ß√£o com hiperpar√¢metros (n√∫mero de camadas, unidades, `seq_length`, taxa de aprendizado, etc.).
""")

st.markdown("---")
st.markdown("""
**Em resumo:** A combina√ß√£o do ARIMAX (para capturar estrutura linear, sazonalidade e o impacto de features sazonais expl√≠citas) e do LSTM H√≠brido (para aprender padr√µes n√£o lineares e depend√™ncias de longo prazo, tamb√©m auxiliado por features sazonais e pela "vis√£o" do ARIMAX) visa fornecer um conjunto robusto de ferramentas para a previs√£o do pre√ßo do petr√≥leo Brent.
""")

st.markdown("---")
st.markdown("‚¨ÖÔ∏è Volte para a p√°gina de **Modelos Preditivos** para testar as previs√µes!")

